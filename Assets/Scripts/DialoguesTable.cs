// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class DialoguesTable : MonoBehaviour
{
    public TextAsset file;
	public List<Row> rowList = new List<Row>();
	public bool isLoaded = false;

	public void Start () {
		rowList = new List<Row>();
		Load(file);
		Debug.Log("CSV file loaded.");
	}


	[System.Serializable]
	public class Row
	{

		/*public Row() {
			this.sceneID = "0";
			this.character = "Unknown";
			this.dialogue = " ";
			this.good_answer = "Yes.";
			this.wrong_answer = "No.";
		}
		public Row(Row anotherRow) {
			this.sceneID = anotherRow.sceneID;
			this.character = anotherRow.character;
			this.dialogue = anotherRow.dialogue;
			this.good_answer = anotherRow.good_answer;
			this.wrong_answer = anotherRow.wrong_answer;
		}*/

		public string sceneID;
		public string character;
		public string dialogue;
		public string good_answer;
		public string wrong_answer;

	}

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.sceneID = grid[i][0];
			row.character = grid[i][1];
			row.dialogue = grid[i][2];
			row.good_answer = grid[i][3];
			row.wrong_answer = grid[i][4];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_sceneID(string find)
	{
		return rowList.Find(x => x.sceneID == find);
	}
	public List<Row> FindAll_sceneID(string find)
	{
		return rowList.FindAll(x => x.sceneID == find);
	}
	public Row Find_character(string find)
	{
		return rowList.Find(x => x.character == find);
	}
	public List<Row> FindAll_character(string find)
	{
		return rowList.FindAll(x => x.character == find);
	}
	public Row Find_dialogue(string find)
	{
		return rowList.Find(x => x.dialogue == find);
	}
	public List<Row> FindAll_dialogue(string find)
	{
		return rowList.FindAll(x => x.dialogue == find);
	}
	public Row Find_good_answer(string find)
	{
		return rowList.Find(x => x.good_answer == find);
	}
	public List<Row> FindAll_good_answer(string find)
	{
		return rowList.FindAll(x => x.good_answer == find);
	}
	public Row Find_wrong_answer(string find)
	{
		return rowList.Find(x => x.wrong_answer == find);
	}
	public List<Row> FindAll_wrong_answer(string find)
	{
		return rowList.FindAll(x => x.wrong_answer == find);
	}

}